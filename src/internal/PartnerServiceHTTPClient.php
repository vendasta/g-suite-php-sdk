<?php 
# Code generated by sdkgen
# Generated on 2021-02-02 21:16:38.843483037 +0000 UTC using container gcr.io/repcore-prod/sdkgen:latest
# DO NOT EDIT!

namespace Vendasta\GSuite\V1\internal;

use Vendasta\Vax\HTTPClient;

class PartnerServiceHTTPClient extends HTTPClient implements PartnerServiceClientInterface
{
    /**
     * PartnerServiceHTTPClient constructor.
     * @param string $host
     * @param string $scope
     * @param bool $secure
     * @param float $default_timeout
     */
    public function __construct(string $host, string $scope, bool $secure = true, float $default_timeout = 10000)
    {
        parent::__construct($host, $scope, $secure, $default_timeout);
    }
    
    /**
     * Auth wrapper for \GSuite\V1\PartnerServiceClient::ListSubscriptions
     * @param \Gsuite\V1\ListSubscriptionsRequest $req proto request message
     * @param array $options optional options, possible keys:
     *              \Vendasta\Vax\RequestOptions::*
     * @return \Gsuite\V1\ListSubscriptionsResponse proto response message
     * @throws \Vendasta\Vax\SDKException if this call encounters an error
     */
    public function ListSubscriptions(\Gsuite\V1\ListSubscriptionsRequest $req, array $options = []): \Gsuite\V1\ListSubscriptionsResponse
    {
        return $this->doRequest(
            "/gsuite.v1.PartnerService/ListSubscriptions",
            $req,
            "\Gsuite\V1\ListSubscriptionsResponse",
            $options
        );
    }
    
    /**
     * Auth wrapper for \GSuite\V1\PartnerServiceClient::GetDomainInformation
     * @param \Gsuite\V1\GetDomainInformationRequest $req proto request message
     * @param array $options optional options, possible keys:
     *              \Vendasta\Vax\RequestOptions::*
     * @return \Gsuite\V1\GetDomainInformationResponse proto response message
     * @throws \Vendasta\Vax\SDKException if this call encounters an error
     */
    public function GetDomainInformation(\Gsuite\V1\GetDomainInformationRequest $req, array $options = []): \Gsuite\V1\GetDomainInformationResponse
    {
        return $this->doRequest(
            "/gsuite.v1.PartnerService/GetDomainInformation",
            $req,
            "\Gsuite\V1\GetDomainInformationResponse",
            $options
        );
    }
    
    /**
     * Auth wrapper for \GSuite\V1\PartnerServiceClient::ChangeSeats
     * @param \Gsuite\V1\ChangeSeatsRequest $req proto request message
     * @param array $options optional options, possible keys:
     *              \Vendasta\Vax\RequestOptions::*
     * @return \Google\Protobuf\GPBEmpty proto response message
     * @throws \Vendasta\Vax\SDKException if this call encounters an error
     */
    public function ChangeSeats(\Gsuite\V1\ChangeSeatsRequest $req, array $options = []): \Google\Protobuf\GPBEmpty
    {
        return $this->doRequest(
            "/gsuite.v1.PartnerService/ChangeSeats",
            $req,
            "\Google\Protobuf\GPBEmpty",
            $options
        );
    }
    
    /**
     * Auth wrapper for \GSuite\V1\PartnerServiceClient::UpdateSSO
     * @param \Gsuite\V1\UpdateSSORequest $req proto request message
     * @param array $options optional options, possible keys:
     *              \Vendasta\Vax\RequestOptions::*
     * @return \Google\Protobuf\GPBEmpty proto response message
     * @throws \Vendasta\Vax\SDKException if this call encounters an error
     */
    public function UpdateSSO(\Gsuite\V1\UpdateSSORequest $req, array $options = []): \Google\Protobuf\GPBEmpty
    {
        return $this->doRequest(
            "/gsuite.v1.PartnerService/UpdateSSO",
            $req,
            "\Google\Protobuf\GPBEmpty",
            $options
        );
    }
    
    /**
     * Auth wrapper for \GSuite\V1\PartnerServiceClient::GetSSO
     * @param \Gsuite\V1\GetSSORequest $req proto request message
     * @param array $options optional options, possible keys:
     *              \Vendasta\Vax\RequestOptions::*
     * @return \Gsuite\V1\GetSSOResponse proto response message
     * @throws \Vendasta\Vax\SDKException if this call encounters an error
     */
    public function GetSSO(\Gsuite\V1\GetSSORequest $req, array $options = []): \Gsuite\V1\GetSSOResponse
    {
        return $this->doRequest(
            "/gsuite.v1.PartnerService/GetSSO",
            $req,
            "\Gsuite\V1\GetSSOResponse",
            $options
        );
    }
    
}
